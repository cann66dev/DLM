#import <UIKit/UIKit.h>

@interface NCShortLookView : UIView
@end

@interface NCNotificationShortLookView : NCShortLookView
- (UIView *)_notificationContentView;
@end

@interface NCLookHeaderContentView : UIView
@property (nonatomic, retain) UIImage *icon;
@property (nonatomic, readonly) UIButton *iconButton;
@property (nonatomic, copy) NSDate *date;
- (UILabel *)_titleLabel;
- (UILabel *)_dateLabel;
@end

@interface NCNotificationListCellActionButtonsView : UIView
@property (nonatomic, retain) UIStackView *buttonsStackView;
@end

@interface NCNotificationListCellActionButton : UIControl
@property (nonatomic, retain) UIView *backgroundView;
@property (nonatomic, retain) UILabel *titleLabel;
@end

@interface NCAnimatableBlurringView : UIView
@end

@interface NCNotificationLongLookView : NCAnimatableBlurringView
@end

@interface CAFilter : NSObject
+ (instancetype)filterWithType:(NSString *)type;
@end

static const unsigned bulletinListSystemIconDataLength = 1666;
static const char bulletinListSystemIconDataBytes[bulletinListSystemIconDataLength] = {
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0000, 0000, 0000, 0x0d, 0x49, 0x48, 0x44, 0x52, 0000, 0000, 0000, 0x3c, 0000, 0000, 0000, 0x3c,
    0x08, 0x06, 0000, 0000, 0000, 0x3a, 0xfc, 0xd9, 0x72, 0000, 0000, 0000, 0x01, 0x73, 0x52, 0x47, 0x42, 0000, 0xae, 0xce, 0x1c, 0xe9, 0000, 0000,
    0000, 0x09, 0x70, 0x48, 0x59, 0x73, 0000, 0000, 0x21, 0x38, 0000, 0000, 0x21, 0x38, 0x01, 0x45, 0x96, 0x31, 0x60, 0000, 0000, 0000, 0x1c, 0x69,
    0x44, 0x4f, 0x54, 0000, 0000, 0000, 0x02, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0x1e, 0000, 0000, 0000, 0x28, 0000, 0000, 0000, 0x1e, 0000,
    0000, 0000, 0x1e, 0000, 0000, 0x03, 0x45, 0xfb, 0x31, 0x80, 0x22, 0000, 0000, 0x03, 0x11, 0x49, 0x44, 0x41, 0x54, 0x68, 0x05, 0xd4, 0x99, 0xbf,
    0x6b, 0x53, 0x51, 0x1c, 0xc5, 0x33, 0x55, 0x70, 0x70, 0x91, 0x2a, 0xa5, 0x4b, 0xc0, 0x59, 0xff, 0x85, 0x3e, 0x97, 0x2e, 0xba, 0x3a, 0x0b, 0x2e,
    0x75, 0xec, 0x24, 0x74, 0x13, 0xf1, 0x2f, 0x10, 0x2c, 0x54, 0x97, 0x0c, 0x22, 0x3a, 0xaa, 0xbb, 0x84, 0x0a, 0x76, 0x13, 0x74, 0x51, 0x70, 0xb0,
    0x9b, 0x0e, 0x0a, 0xa2, 0x53, 0x09, 0xa8, 0xe7, 0x93, 0xf6, 0xa4, 0xdf, 0xbc, 0xbc, 0x44, 0xf3, 0xde, 0xfb, 0x46, 0x3d, 0x70, 0x7a, 0x6f, 0xee,
    0xbb, 0xf7, 0x9c, 0xf3, 0x4d, 0xde, 0xef, 0x76, 0x3a, 0x79, 0x38, 0x29, 0xe9, 0x75, 0x71, 0x4b, 0xec, 0x89, 0x7b, 0xe2, 0x07, 0xf1, 0xb3, 0x78,
    0x70, 0x44, 0xfa, 0x8c, 0xb1, 0xad, 0x27, 0x32, 0x97, 0x35, 0xac, 0xfd, 0x2f, 0x70, 0x56, 0x29, 0x37, 0xc5, 0x5d, 0x91, 0xa2, 0x7e, 0xd6, 0x24,
    0x6b, 0xd1, 0x40, 0x0b, 0xcd, 0x7f, 0x0e, 0x6b, 0x4a, 0xf4, 0x4c, 0x1c, 0x88, 0x75, 0x8b, 0x9c, 0xb6, 0x0e, 0x4d, 0xb4, 0xf1, 0xf8, 0xeb, 0xb8,
    0xa8, 0x04, 0x2f, 0xc4, 0xaa, 0xb0, 0x3f, 0x34, 0xfe, 0x5a, 0xbc, 0x23, 0x6e, 0x88, 0x85, 0xd8, 0x15, 0x4f, 0x8b, 0x4b, 0x47, 0xa4, 0xdf, 0x15,
    0x0b, 0x91, 0x39, 0xcc, 0x65, 0x0d, 0x6b, 0xab, 0x34, 0xf1, 0xc2, 0x73, 0xe1, 0x58, 0x91, 0xe3, 0x43, 0xb1, 0x1c, 0x8a, 0xa0, 0x7d, 0xf1, 0x9a,
    0xb8, 0x2c, 0xd6, 0x05, 0x6b, 0xd1, 0xe8, 0x8b, 0x55, 0xc5, 0xe3, 0x4d, 0x86, 0x85, 0xe0, 0x8a, 0x5c, 0xbe, 0x8a, 0xb1, 0x58, 0x8e, 0xb9, 0x1d,
    0xf1, 0x9c, 0xd8, 0x36, 0xd0, 0x44, 0x1b, 0x8f, 0xe8, 0x49, 0x06, 0xb2, 0xa4, 0xe1, 0x84, 0x94, 0xb7, 0xc5, 0x68, 0x4a, 0xff, 0x81, 0xb8, 0x2a,
    0x66, 0x03, 0x0f, 0xbc, 0xca, 0xfe, 0x77, 0x35, 0x46, 0xb6, 0x56, 0x71, 0x4a, 0x6a, 0xcf, 0xc5, 0x68, 0xf6, 0x5e, 0x9f, 0x0b, 0x71, 0xd1, 0x28,
    0x64, 0x88, 0x77, 0xcc, 0x42, 0x36, 0x32, 0xb6, 0x82, 0x33, 0x52, 0x79, 0x25, 0x46, 0x83, 0x47, 0xfa, 0xdc, 0x9a, 0x41, 0x8d, 0x94, 0x78, 0x3f,
    0x2e, 0x65, 0x22, 0x23, 0x59, 0x1b, 0x01, 0x61, 0x84, 0x5c, 0x2c, 0x27, 0x90, 0x1b, 0x8d, 0x14, 0xdb, 0x5d, 0x4c, 0x96, 0x78, 0x52, 0x23, 0x2b,
    0x99, 0x6b, 0x81, 0xe3, 0x22, 0xee, 0xc6, 0x03, 0x7d, 0xbe, 0x5a, 0x4b, 0xe9, 0x78, 0xd1, 0x4d, 0x75, 0xab, 0x78, 0x3c, 0x63, 0xfe, 0x1e, 0x99,
    0xc8, 0xe6, 0x1f, 0x85, 0xcc, 0xb5, 0x8e, 0xe9, 0xed, 0x20, 0xc2, 0xb7, 0xd8, 0xb4, 0x58, 0x49, 0x8c, 0x42, 0x39, 0x9c, 0x5b, 0xb6, 0x35, 0x01,
    0xd9, 0xe2, 0x2f, 0x4d, 0xf6, 0xb9, 0xc0, 0xe9, 0xde, 0x61, 0x68, 0xdb, 0xda, 0x8d, 0xa3, 0x66, 0xec, 0xcf, 0x15, 0x6e, 0xca, 0x64, 0x32, 0x46,
    0xcd, 0x3f, 0xbe, 0x64, 0xad, 0x68, 0x61, 0xbc, 0xce, 0x72, 0x82, 0x6a, 0x0b, 0x31, 0x50, 0xec, 0xb7, 0xa5, 0x4f, 0x56, 0xeb, 0x52, 0x03, 0xb5,
    0xfc, 0x16, 0xf1, 0x0e, 0x8a, 0xd3, 0x7f, 0xed, 0x93, 0x40, 0x85, 0x93, 0xc3, 0x94, 0xdb, 0x8a, 0xa9, 0xb5, 0x86, 0xc8, 0x1a, 0x2f, 0x59, 0xd4,
    0x32, 0x13, 0xdc, 0xa7, 0xc6, 0x30, 0xc5, 0xcc, 0xd9, 0xf3, 0x6f, 0x8c, 0xda, 0xb1, 0x3f, 0xbf, 0xd2, 0xf4, 0x15, 0x85, 0x36, 0x45, 0xed, 0x99,
    0xf7, 0xde, 0xf1, 0x41, 0x80, 0xbb, 0x9a, 0xb6, 0x11, 0x83, 0xc4, 0x7e, 0xdb, 0x3e, 0xf1, 0x8e, 0x8c, 0x9a, 0x2a, 0xb1, 0xa6, 0x51, 0x87, 0xe0,
    0xbe, 0x75, 0xb5, 0x72, 0x56, 0xb3, 0x41, 0xeb, 0x97, 0xdb, 0x66, 0xaa, 0x93, 0xab, 0xc9, 0x1e, 0xef, 0xbd, 0xa9, 0x6d, 0x02, 0x3c, 0x73, 0x3a,
    0xc8, 0xce, 0xc4, 0xd6, 0x76, 0x06, 0xac, 0x5f, 0x6e, 0xdb, 0x51, 0x1f, 0x57, 0xa1, 0x06, 0xfb, 0x50, 0xdb, 0x18, 0x78, 0xab, 0x30, 0x10, 0x99,
    0xc0, 0xf5, 0x2c, 0xe3, 0xa9, 0x47, 0xb2, 0x63, 0xdf, 0xba, 0xc3, 0xf0, 0x4b, 0x64, 0x80, 0x1a, 0x7c, 0x6d, 0xa6, 0xb6, 0xb1, 0x37, 0x27, 0x9b,
    0x1a, 0x70, 0x80, 0xbe, 0xfa, 0x59, 0xf8, 0x26, 0x61, 0xfb, 0xb8, 0xfd, 0x9e, 0x65, 0x26, 0xdd, 0x7e, 0xf0, 0xa3, 0xc6, 0x11, 0x76, 0xd5, 0x73,
    0000, 0x1e, 0xbc, 0xb3, 0xf0, 0x51, 0xc2, 0xf6, 0x71, 0xfb, 0x29, 0xcb, 0x4c, 0xba, 0xd4, 0x62, 0x1f, 0x6a, 0x1c, 0x82, 0x37, 0x84, 0x3e, 0xc0,
    0xd9, 0x05, 0x96, 0x0f, 0x87, 0x53, 0xfe, 0xbe, 0x95, 0xaa, 0x03, 0xb8, 0x7d, 0x97, 0xe2, 0x74, 0x28, 0x4a, 0x2d, 0xde, 0xad, 0xa9, 0x71, 0xf8,
    0x36, 0x74, 0x5d, 0x1d, 0x9b, 0xf3, 0x3e, 0x29, 0x13, 0x2f, 0x25, 0x6e, 0x2f, 0xb7, 0x7b, 0x99, 0x86, 0xd2, 0x7e, 0x13, 0x3c, 0xa9, 0x75, 0xf8,
    0x2e, 0xd8, 0xe6, 0xbc, 0x44, 0xcb, 0xc4, 0x13, 0x89, 0xdb, 0xcb, 0xed, 0xd3, 0x4c, 0x43, 0x69, 0x53, 0x93, 0xbd, 0xb6, 0xf0, 0xea, 0x85, 0x81,
    0x0d, 0x06, 0x12, 0x71, 0x4f, 0xda, 0x36, 0x77, 0x7b, 0x3f, 0xd1, 0x0f, 0x69, 0x6a, 0xb2, 0x57, 0x8f, 0x01, 0x76, 0x29, 0x0f, 0x14, 0x0c, 0x24,
    0xe2, 0x96, 0xb4, 0xed, 0xe5, 0xf6, 0x76, 0xa2, 0x1f, 0xd2, 0x85, 0x68, 0xaf, 0xe1, 0xe1, 0xb3, 0x1f, 0x06, 0xba, 0xea, 0x67, 0x22, 0x7e, 0xdb,
    0x0e, 0x71, 0x3d, 0xd3, 0x50, 0xda, 0x5d, 0xd1, 0x5e, 0xfb, 0xea, 0x77, 0xbe, 0x84, 0x01, 0x5e, 0x8c, 0x67, 0xe2, 0x92, 0xc4, 0x6d, 0xee, 0xf6,
    0x72, 0xa6, 0xa1, 0xb4, 0xa9, 0xc9, 0x5e, 0xfc, 0x2f, 0x6b, 0x74, 0x49, 0x62, 0x70, 0x89, 0x81, 0x44, 0x9c, 0x97, 0xb6, 0xcd, 0xdd, 0x5e, 0x48,
    0xf4, 0x43, 0x9a, 0x9a, 0xec, 0x75, 0xf0, 0x0b, 0000, 0000, 0xff, 0xff, 0x53, 0xe2, 0x43, 0x6c, 0000, 0000, 0x02, 0xe2, 0x49, 0x44, 0x41, 0x54,
    0xdd, 0x99, 0x4f, 0x6b, 0x13, 0x51, 0x14, 0xc5, 0x67, 0x55, 0x41, 0x50, 0x17, 0xd2, 0x4a, 0xe9, 0x26, 0xe2, 0x07, 0xe9, 0x08, 0xd2, 0x6f, 0xd0,
    0xb5, 0xe0, 0xa6, 0xdb, 0xae, 0x84, 0xae, 0xfc, 0x0a, 0x2a, 0x58, 0xe8, 0x2e, 0x8b, 0xb6, 0xe8, 0xda, 0x7d, 0x09, 0xed, 0xa2, 0xe0, 0x42, 0xd0,
    0xad, 0x0b, 0xf3, 0x01, 0xfc, 0xb7, 0x95, 0x80, 0x7a, 0x7e, 0x32, 0x27, 0xdc, 0x26, 0x69, 0x93, 0x99, 0x79, 0x2f, 0x24, 0x39, 0x70, 0xfa, 0x5e,
    0xee, 0xdc, 0x77, 0xef, 0x39, 0xc9, 0xfc, 0x6f, 0x51, 0x14, 0xc5, 0x6f, 0xf1, 0x6f, 0xc5, 0x35, 0x8d, 0x39, 0x71, 0x47, 0xc5, 0xdd, 0xcb, 0xe3,
    0xbd, 0x9c, 0x0d, 0x55, 0x1b, 0x4f, 0xee, 0x85, 0xd7, 0xe2, 0x5b, 0x08, 0xdc, 0x27, 0x90, 0x19, 0xb1, 0xdf, 0xf7, 0xcc, 0xbd, 0x28, 0x8f, 0x27,
    0x1b, 0xa6, 0x77, 0xd1, 0x0f, 0x81, 0x8e, 0xe6, 0xb9, 0xf1, 0x41, 0x0d, 0x2c, 0x80, 0x79, 0x6e, 0x3c, 0x54, 0x03, 0xf7, 0xfb, 0x4a, 0xb3, 0xcb,
    0x10, 0x28, 0x09, 0x64, 0xc6, 0x89, 0xea, 0x5b, 0xc0, 0x69, 0xe6, 0x5e, 0x94, 0x2f, 0x45, 0xf7, 0xc3, 0x6b, 0xd1, 0x0d, 0x81, 0x3d, 0x02, 0x99,
    0xf1, 0x44, 0xf5, 0x5f, 0x54, 0x64, 0x9e, 0x1b, 0x78, 0xb2, 0xe1, 0x2e, 0xcd, 0x0e, 0x42, 0xe0, 0x35, 0x81, 0x15, 0x03, 0x9e, 0x6c, 0x18, 0xaf,
    0xc5, 0x4e, 0x08, 0x7c, 0x22, 0xb0, 0x62, 0xf8, 0x2c, 0x3f, 0x36, 0x8c, 0xd7, 0xe2, 0xb6, 0xe8, 0x4b, 0xd3, 0x1f, 0xcd, 0xd7, 0x09, 0xae, 0x08,
    0xf0, 0x82, 0x27, 0x0c, 0xe3, 0x11, 0xaf, 0xff, 0x71, 0xae, 0xbf, 0xfe, 0x16, 0x9e, 0x55, 0xb1, 0x55, 0x18, 0xf0, 0x62, 0x5f, 0x78, 0x1c, 0x62,
    0x5f, 0x33, 0x6f, 0xe8, 0x0d, 0xa3, 0xcb, 0x3f, 0xc1, 0x8b, 0x7d, 0xe1, 0x71, 0x88, 0x07, 0x9a, 0x0d, 0x44, 0x36, 0xb2, 0x0b, 0x3c, 0x12, 0x97,
    0x1d, 0x78, 0xf0, 0xee, 0x8c, 0x37, 0x3c, 0x5e, 0xc1, 0x7b, 0x7d, 0xf2, 0xb7, 0x71, 0x74, 0x65, 0xcb, 0x72, 0x7e, 0xc0, 0x83, 0xfd, 0xe0, 0x6d,
    0x0c, 0xdb, 0x8a, 0x38, 0x81, 0x03, 0x7c, 0x6b, 0x2c, 0xa3, 0x7d, 0x80, 0xfb, 0xda, 0x57, 0xe2, 0xcf, 0x8a, 0xcc, 0x89, 0xa5, 0x06, 0xda, 0xf1,
    0x60, 0x3f, 0x78, 0x9b, 0x88, 0x0b, 0x45, 0x9d, 0x74, 0x3c, 0x31, 0xa3, 0x5d, 0x10, 0x83, 0xae, 0xef, 0xf1, 0x65, 0xbb, 0x92, 0x13, 0x57, 0xa3,
    0xdd, 0xf5, 0xf1, 0x74, 0x2d, 0x1e, 0x6b, 0x8b, 0x13, 0x19, 0xcb, 0x6b, 0x33, 0x9b, 0x6d, 0xf8, 0xa1, 0x65, 0xb1, 0x3e, 0x73, 0x62, 0x29, 0x51,
    0xaa, 0x58, 0xec, 0x81, 0xa7, 0x1b, 0x71, 0xaa, 0xad, 0x5e, 0xf0, 0x45, 0xf3, 0xbb, 0x37, 0x66, 0xd7, 0xdb, 0x98, 0xdb, 0x30, 0x5a, 0xd1, 0x6c,
    0xfd, 0x78, 0x99, 0x8a, 0x4d, 0x65, 0xfc, 0x12, 0xbd, 0xe8, 0xed, 0xd4, 0x15, 0xb3, 0x27, 0xb0, 0xfb, 0xba, 0xae, 0xc7, 0x94, 0xbb, 0xf4, 0xbb,
    0x50, 0x1f, 0x0f, 0x78, 0x99, 0x09, 0xbb, 0xca, 0xb2, 0x20, 0xc6, 0xe7, 0x33, 0xad, 0x9a, 0x9e, 0x34, 0x7a, 0xd2, 0xc2, 0x6c, 0xaa, 0x93, 0x16,
    0x1a, 0xa3, 0x66, 0x3c, 0xd4, 0xc2, 0xa1, 0xb2, 0x5d, 0x80, 0xeb, 0xd9, 0xd3, 0x5a, 0xab, 0xe7, 0x9b, 0x8c, 0x36, 0x5f, 0x73, 0xd1, 0xfc, 0xa6,
    0x49, 0xfb, 0x5b, 0x5a, 0x74, 0x26, 0xda, 0xf4, 0x40, 0xf3, 0x45, 0x34, 0x8d, 0x26, 0xb4, 0x59, 0x27, 0x9a, 0xd1, 0xde, 0x08, 0x9c, 0x04, 0x3e,
    0x8a, 0x2e, 0xc6, 0xb7, 0x98, 0x6a, 0xf7, 0x6e, 0x24, 0x68, 0x64, 0x11, 0x5a, 0xe2, 0x2f, 0x8b, 0x56, 0x34, 0xb7, 0xc2, 0x86, 0x56, 0x47, 0xd3,
    0x98, 0xe7, 0x44, 0xd6, 0xba, 0x70, 0x0b, 0x55, 0xf4, 0x46, 0x83, 0x7f, 0x08, 0x46, 0x34, 0xa2, 0x35, 0x09, 0x68, 0x10, 0x77, 0x6f, 0x1a, 0x70,
    0xfa, 0x2f, 0xc5, 0x79, 0xa3, 0x54, 0xc3, 0x78, 0xe9, 0x41, 0x0b, 0xda, 0x92, 0xff, 0000, 0x1c, 0x17, 0x87, 0x62, 0xfc, 0x56, 0x99, 0x73, 0x57,
    0xb3, 0x25, 0xe6, 0x06, 0x3d, 0xe2, 0x1d, 0x94, 0x75, 0xa0, 0xa9, 0xf1, 0x31, 0x3b, 0x8b, 0x68, 0x4e, 0xf7, 0x5c, 0xe3, 0xdc, 0x90, 0x91, 0xfb,
    0xd6, 0x23, 0x31, 0xc7, 0x53, 0x16, 0x35, 0xa9, 0x4d, 0x8f, 0xd8, 0x13, 0x0d, 0xb5, 0x2f, 0x3d, 0x5a, 0xd3, 0x08, 0x9b, 0x5a, 0x15, 0xef, 0xc8,
    0x2c, 0x84, 0x13, 0x48, 0x4f, 0xe4, 0xc1, 0x7b, 0x5d, 0x6c, 0x0a, 0xd6, 0x52, 0xa3, 0x27, 0xc6, 0x93, 0x92, 0xfb, 0xd0, 0x1b, 0x0d, 0x73, 0x07,
    0xf7, 0xa9, 0xf1, 0x81, 0xc3, 0x82, 0x18, 0x11, 0xca, 0x3b, 0x32, 0x5e, 0xa2, 0xed, 0x89, 0xa5, 0xd8, 0x11, 0x79, 0x31, 0xbe, 0x56, 0x91, 0x79,
    0x47, 0x2c, 0x45, 0x72, 0xc8, 0x65, 0xcd, 0x24, 0x93, 0xd4, 0xa4, 0xd7, 0xd4, 0x7b, 0x63, 0xe5, 0x64, 0xc7, 0xb6, 0x3a, 0xf0, 0xcc, 0x39, 0x10,
    0xa3, 0xe9, 0x14, 0x73, 0x6a, 0x52, 0x9b, 0x1e, 0x0b, 0x07, 0xde, 0x2a, 0xec, 0x8b, 0xe7, 0xe2, 0xe8, 0x31, 0x57, 0xc7, 0x3c, 0x6b, 0xa9, 0x41,
    0xad, 0xb1, 0x37, 0x15, 0x8a, 0x2d, 0x24, 0x78, 0x43, 0xb8, 0x23, 0x1e, 0x88, 0x5d, 0xf1, 0x52, 0xec, 0x8b, 0xfc, 0x3f, 0x09, 0x43, 0x90, 0x79,
    0x5f, 0x64, 0x5b, 0x57, 0x24, 0x97, 0x35, 0xc3, 0xb7, 0x8b, 0x9a, 0x27, 0xc5, 0x3f, 0x43, 0x53, 0xaf, 0xdf, 0x1d, 0x51, 0xa0, 0x87, 0000, 0000,
    0000, 0000, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static UIColor *cachedLightColor() {
    static UIColor *lightColor = NULL;
    if (!lightColor) {
        lightColor = [UIColor colorWithWhite:0.95 alpha:1.0];
    }
    
    return lightColor;
}

static void configureMainBackgroundView(UIView *view) {
    view.backgroundColor = UIColor.blackColor;
    view.alpha = 0.7;
}

// View shown when notification is expanded
%hook NCNotificationLongLookView

- (void)layoutSubviews {
    %orig;
    
    NSArray<UIView *> *topSubviews = self.subviews;
    NSArray<UIView *> *seperatorViews = topSubviews.firstObject.subviews;
    topSubviews.lastObject.backgroundColor = NULL;
    seperatorViews.firstObject.backgroundColor = NULL;
    
    UIView *contentView = seperatorViews.lastObject.subviews.firstObject.subviews.firstObject;
    UIView *headerView = [self valueForKey:@"_headerContentView"];
    
    // remove all these views' colors
    headerView.superview.backgroundColor = NULL;
    contentView.superview.backgroundColor = NULL;
    contentView.backgroundColor = NULL;
    
    self.backgroundColor = [UIColor colorWithWhite:0.0 alpha:0.7];
    CALayer *thisLayer = self.layer;
    // original corner radius
    thisLayer.cornerRadius = 13;
    thisLayer.masksToBounds = YES;
    
    UIColor *ourWhite = cachedLightColor();
    for (UILabel *subLabel in contentView.subviews.firstObject.subviews) {
        if ([subLabel respondsToSelector:@selector(setTextColor:)]) {
            subLabel.textColor = ourWhite;
        }
    }
}

%end

// The standard "view" and "clear" buttons presented when notifications are slid to the left
%hook NCNotificationListCellActionButton

- (void)layoutSubviews {
    %orig;
    
    configureMainBackgroundView(self.backgroundView.subviews.firstObject.subviews.lastObject);
    self.titleLabel.textColor = cachedLightColor();
}

%end

// Main default notification view
%hook NCNotificationShortLookView

- (void)layoutSubviews {
    %orig;
    
    NSArray<UIView *> *topSubviews = self.subviews;
    for (UIView *subView in topSubviews) {
        if (subView.class == %c(NCMaterialView)) {
            configureMainBackgroundView(subView.subviews.firstObject.subviews.lastObject);
            break;
        }
    }
    
    
    UIColor *lightColor = cachedLightColor();
    UIView *contentView = [self _notificationContentView];
    for (UILabel *label in contentView.subviews.firstObject.subviews) {
        if ([label respondsToSelector:@selector(setTextColor:)]) {
            label.textColor = lightColor;
        }
    }
}

%end

// Make sure those filters are really removed
%hook NCLookHeaderContentView

- (void)_configureDateLabelIfNecessary {
    %orig;
    
    UILabel *dateLabel = [self _dateLabel];
    UILabel *titleLabel = [self _titleLabel];
    UIColor *lightColor = cachedLightColor();
    
    dateLabel.layer.filters = NULL;
    titleLabel.layer.filters = NULL;
    
    dateLabel.textColor = lightColor;
    titleLabel.textColor = lightColor;
    
    UIImageView *iconView = self.iconButton.subviews.firstObject;
    BOOL addedFilter = NO;
    
    // if there's no date, it's a system notification
    if (!self.date) {
        // system notifications can have a different icon than the default one
        NSData *iconData = UIImagePNGRepresentation(self.icon);
        NSData *bulletinListSystemIconData = [NSData dataWithBytes:bulletinListSystemIconDataBytes length:bulletinListSystemIconDataLength];
        if ([iconData isEqualToData:bulletinListSystemIconData]) {
            CAFilter *invertFilter = [CAFilter filterWithType:@"colorInvert"];
            iconView.layer.filters = @[invertFilter];
            addedFilter = YES;
        }
    }
    
    if (!addedFilter) {
        iconView.layer.filters = NULL;
    }
}

%end

// Make all materialviews clear
%hook NCMaterialView

- (void)setBackgroundColor:(UIColor *)color {
    %orig(NULL);
}

%end
